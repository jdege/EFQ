@using System.Linq
@model IEnumerable<JDege.EFQ.Web.Models.StoredQueryModel>

@{
    bool displayContext = Model.Any(m => m.Context != null);
}

<h3>Field matching</h3>

<div>
    @Html.Raw(ViewBag.docs)
</div>

<h3>The stored queries:</h3>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.BaseTable)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Query)
            </th>
            @if (displayContext)
            {
                <th>
                    @Html.DisplayNameFor(model => model.Context)
                </th>
            }
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.BaseTable)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Query)
                </td>
                @if (displayContext)
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.Context)
                    </td>
                }
                <td>
                    @Html.Raw(item.Description)
                </td>
                <td>
                    @{
                        var context = (item.Context == null) ? null : Uri.EscapeDataString(item.Context);
                    }
                    <a asp-controller="RunQuery" asp-action=@item.BaseTable asp-route-id=@item.Id asp-route-rc=@item.Area
                    asp-route-ctx="@context">Execute</a>
                </td>
            </tr>
        }
    </tbody>
</table>
